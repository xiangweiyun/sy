server:
  #服务端口
  port: 7777
spring:
  application:
    #服务名称
<<<<<<< HEAD
    name: sys-boot2
=======
    name: sys
>>>>>>> 98aef4caffa9b170cf498ff0d91e2b2f57c73121
  profiles:
    #指定开发环境
    active: dev
  main:
    #覆盖重名的bean，避免bean冲突
    allow-bean-definition-overriding: true
  cloud:
    nacos:
      discovery:
        #允许nacos发现服务的nacos服务器地址
        server-addr: 192.168.3.89:8848
        #注册命名空间
        namespace: d41aed27-2d4f-4948-b864-b492484d6be7
      config:
        #nacos服务器地址
        server-addr: ${spring.cloud.nacos.discovery.server-addr}
        #默认为Public命名空间,可以省略不写
        namespace: d41aed27-2d4f-4948-b864-b492484d6be7
        #指定配置群组 --如果是Public命名空间 则可以省略群组配置
        group: DEFAULT_GROUP
        #文件名 -- 如果没有配置则默认为 ${spring.appliction.name}
        prefix: sys-boot
        #指定配置的后缀，支持 properties、yaml、yml，默认为 properties
        file-extension: yml
        #共享配置
        shared-configs[0]:
          data-id: application-${spring.profiles.active}.${spring.cloud.nacos.config.file-extension}
          group: DEFAULT_GROUP
          refresh: true

#主键生成策略
mybatis-plus:
  configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
    cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: 'null'
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:/mapper/*.xml
  # 实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.sy.sys.entity
  global-config:
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID", ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: id_worker
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: not_empty
      #数据库类型
      db-type: ORACLE
      #驼峰下划线转换
      db-column-underline: true
      #mp2.3+ 全局表前缀 mp_
      #table-prefix: mp_
      #刷新mapper 调试神器
      refresh-mapper: true
      #数据库大写下划线转换
      capital-mode: true
      #逻辑删除配置
      # 逻辑删除全局值（1表示已删除，这也是Mybatis Plus的默认配置）
      logic-delete-value: 1
      # 逻辑未删除全局值（0表示未删除，这也是Mybatis Plus的默认配置）
<<<<<<< HEAD
      logic-not-delete-value: 0
      

#dubbo:
#  service:
#    version: 2.0.0
  # Dubbo 服务注册中心配置
#  registry:
    # 其中子属性 address 的值 "spring-cloud://localhost"，说明挂载到 Spring Cloud 注册中心
    # 使用nacos://localhost:8848表示挂载到nacos注册中心，这种会在nacos上展示服务名称：consumers:暴露接口包名:版本:组名
#    address: nacos://${spring.cloud.nacos.discovery.server-addr}
    # 配置namespace命名空间
#    parameters[namespace]: d41aed27-2d4f-4948-b864-b492484d6be7
#  application:
    # qos=Quality of Service 是Dubbo的在线运维命令，可以对服务进行动态的配置、控制(上下线)及查询，具体参考：https://blog.csdn.net/u012988901/article/details/84503672
#    qos:
#      enable: false
  # Dubbo 服务暴露的协议配置
#  protocol:
    # 协议名称
#    name: dubbo
    # 协议端口（ -1 表示自增端口，从 20880 开始）
#    port: -1
  # 指定 Dubbo 服务实现类的扫描基准包
#  scan:
#    base-packages: com.sy.*
=======
      logic-not-delete-value: 0
>>>>>>> 98aef4caffa9b170cf498ff0d91e2b2f57c73121
